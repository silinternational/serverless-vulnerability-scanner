'use strict';

const assert = require('assert')
const { convertToCsvString, getSecurityVulnerabilitiesForMultiple } = require('@silintl/vulnerability-scanner')
const AWS = require('aws-sdk')

const s3 = new AWS.S3()

module.exports.scanOrg = async event => {
  assert(event.githubOrg, 'No githubOrg provided')
  assert(event.githubToken, 'No githubToken provided (required to check for vulnerabilities)')
  assert(process.env.RESULTS_S3_BUCKET_PREFIX, 'No RESULTS_S3_BUCKET_PREFIX provided')
  assert(process.env.STAGE, 'No STAGE provided')
  
  const vulnerabilitiesByRepo = await getSecurityVulnerabilitiesForMultiple({
    bitbucket: {
      username: event.bitbucketUsername,
      appPassword: event.bitbucketAppPassword,
      workspace: event.bitbucketWorkspace,
    },
    github: {
      organization: event.githubOrg,
      token: event.githubToken,
    },
  })
  const csvString = await convertToCsvString(vulnerabilitiesByRepo)
  
  try {
    const dateString = (new Date()).toISOString().substr(0, 10)
    const year = dateString.substr(0, 4)
    const month = dateString.substr(5, 2)
    const params = {
      Bucket: `${process.env.RESULTS_S3_BUCKET_PREFIX}-${process.env.STAGE}`,
      Key: `${year}/${month}/${dateString}.csv`,
      Body: csvString,
    }
    console.log(`Uploading to S3: ${params.Bucket}/${params.Key}`)
    const putResult = await s3.putObject(params).promise()
    console.log(putResult)
  } catch (error) {
    console.error(error)
  }
}
