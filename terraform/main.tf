
/*
 * Create IAM user for Serverless framework to use to deploy the lambda function
 */
module "serverless-user" {
  source  = "silinternational/serverless-user/aws"
  version = "0.1.0"

  app_name   = "serverless-vulnerability-scanner"
  username   = "serverless-vulnerability-scanner"
  aws_region = var.aws_region

  extra_policies = [local.s3_policy]
}

output "serverless-access-key-id" {
  value = module.serverless-user.aws_access_key_id
}
output "serverless-secret-access-key" {
  value     = module.serverless-user.aws_secret_access_key
  sensitive = true
}

locals {
  // app_name gets truncated to meet S3 bucket name limits, so the policy that the module creates doesn't match
  s3_policy = jsonencode({
    Action = [
      "s3:GetBucketLocation",
      "s3:CreateBucket",
      "s3:DeleteBucket",
      "s3:ListBucket",
      "s3:ListBucketVersions",
      "s3:PutBucketAcl",
      "s3:PutAccelerateConfiguration",
      "s3:GetEncryptionConfiguration",
      "s3:PutEncryptionConfiguration",
      "s3:PutBucketPolicy",
      "s3:DeleteBucketPolicy",
    ],
    Effect = "Allow"
    Resource = [
      "arn:aws:s3:::serverless-vuln*",
    ]
  })
}
