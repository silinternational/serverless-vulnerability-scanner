
/*
 * Create IAM user for Serverless framework to use to deploy the lambda function
 */
module "serverless-user" {
  source  = "silinternational/serverless-user/aws"
  version = "0.1.0"

  app_name   = var.app_name
  aws_region = var.aws_region

  extra_policies = [local.policy]
}

resource "aws_s3_bucket" "results" {
  bucket = local.aws_s3_bucket_name

  tags = {
    Name     = local.aws_s3_bucket_name
    app_name = var.app_name
    app_env  = var.app_env
  }
}

resource "aws_s3_bucket_public_access_block" "example" {
  bucket = aws_s3_bucket.results.id

  block_public_acls       = true
  block_public_policy     = true
  ignore_public_acl       = true
  restrict_public_buckets = true
}

locals {
  aws_s3_bucket_name = "${var.results_s3_bucket_prefix}-${var.app_env}"

  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Effect" : "Allow",
        "Action" : [
          "s3:PutBucketPublicAccessBlock",
        ],
        "Resource" : [
          "arn:aws:s3:::${var.app_name}*",
        ]
      },
      {
        "Effect" : "Allow",
        "Action" : [
          "lambda:PutFunctionEventInvokeConfig",
          "lambda:DeleteFunctionEventInvokeConfig",
        ],
        "Resource" : [
          "arn:aws:lambda:${var.aws_region}:*:function:${var.app_name}*",
        ]
      },
    ]
  })
}
